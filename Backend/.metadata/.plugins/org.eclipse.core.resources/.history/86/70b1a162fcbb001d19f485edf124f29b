package com.demo.CamCon.Service;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.query.Criteria;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.data.mongodb.gridfs.GridFsOperations;
import org.springframework.data.mongodb.gridfs.GridFsTemplate;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.demo.CamCon.Beans.Notes;
import com.demo.CamCon.Beans.Students;
import com.demo.CamCon.Dao.StudentsDaoIF;
import com.mongodb.BasicDBObject;
import com.mongodb.DBObject;
import com.mongodb.client.gridfs.model.GridFSFile;

@Service
public class StudentService implements StudentServiceIF {

	
	@Autowired
	StudentsDaoIF studDao;
	
	 @Autowired
	    private GridFsTemplate template;

	    @Autowired
	    private GridFsOperations operations;


	    @Override
	    public String addFile(MultipartFile upload, String id,int assId) throws IOException {
	    	
	    	String ass="assignment";
	    	Students s=studDao.findByPRN(id);
	        DBObject metadata = new BasicDBObject();
	        metadata.put("fileSize", upload.getSize());
	        metadata.put("moduleId", id);
	        metadata.put("type", ass);
	        metadata.put("AssignmentId", assId);
	        metadata.put("StudentId", id);
	        metadata.put("StudentName", s.getName());
	        

	        Object fileID = template.store(upload.getInputStream(), upload.getOriginalFilename(), upload.getContentType(), metadata);
	       // upload.
	        return fileID.toString();
	    }

	@Override
	public List<Students> fetchSubStud( int assId) {
		
		
		List<GridFSFile> slist = new ArrayList<GridFSFile>();
		template.find(new Query(Criteria.where("metadata.AssignmentId").is(assId).and("metadata.StudentId").exists(true))).into(slist);
		//Notes notes=new Notes();
		
		//List<LoadFile> alist=adao.findAll();
		System.out.println(slist.get(0).getMetadata().get("StudentName"));
		List<Students> updList=new ArrayList();
		//String s=alist.get(0).getId();
		int i=0;
		for (GridFSFile gfs : slist) {
			
			if(!slist.isEmpty())
			{
			updList.add(new Students(slist.get(i).getObjectId().toString(),slist.get(i).getFilename(),slist.get(i).getUploadDate(),gfs.getMetadata().get("StudentName"),(long) gfs.getMetadata().get("StudentId")));
			//System.out.println(updList);
			i++;
			}
			}
		System.out.println(updList);
		return updList;
	}

	@Override
	public Students addStudent(Students student) {
		// TODO Auto-generated method stub
		return studDao.save(student);
	}

	@Override
	public void deleteStudent(int id) {
		// TODO Auto-generated method stub
		studDao.deleteById(id);
	}

	
	// DECIDE whether prn is int or string
	/*
	 * @Override public Students findById(int id) { // TODO Auto-generated method
	 * stub return studDao.findBy }
	 */
}
